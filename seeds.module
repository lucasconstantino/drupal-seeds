<?php

/**
 * @file
 * Code for the Seeds module.
 */

define('SEEDS_API_VERSION', '0.1.0');

include 'seeds/node.inc';
include 'seeds/term.inc';
include 'seeds/user.inc';

/**
 * Implements hook_menu().
 */
function seeds_menu() {
  $items['seeds/touch'] = array(
    'page callback' => 'seeds_touch',
    'page arguments' => array(),
    'access callback' => TRUE,
  );

  $items['seeds/%/%'] = array(
    'page callback' => 'seeds_router',
    'page arguments' => array(1, 2),
    'access callback' => TRUE,
  );

  return $items;
}

/**
 * Implements hook_seeds_info().
 */
function seeds_seed_info() {
  // @TODO Implement a caching system.
  $seeds['node'] = array(
    'create' => 'seeds_node_seed_create',
    'remove' => 'seeds_node_seed_remove',
  );

  $seeds['term'] = array(
    'create' => 'seeds_term_seed_create',
    'remove' => 'seeds_term_seed_remove',
  );

  $seeds['user'] = array(
    'create' => 'seeds_user_seed_create',
    'remove' => 'seeds_user_seed_remove',
  );

  return $seeds;
}

/**
 * Seeds touch menu callback.
 */
function seeds_touch() {
  print 'seeds@' . SEEDS_API_VERSION;
  drupal_exit();
}

/**
 * Seeds router menu callback.
 */
function seeds_router($type, $action) {
  $info = _seeds_seeds_get_info();

  if (!empty($info[$type][$action])) {

    // @TODO: handle file include for seed types.
    if (!function_exists($info[$type][$action])) {
      drupal_add_http_header('Status', 404);
      print 'Seed "' . $action . '" callback function not found ("' . $info[$type][$action] . '").';
      drupal_exit();
    }

    // Make sure to perform any action as admin, to avoid
    // interference from configured flows such as rules.
    global $user;
    $previous_user = array('uid' => $user->uid);
    $admin = array('uid' => '1');
    user_login_submit(array(), $admin);

    // Execute seed operation.
    $data = empty($_POST['data']) ? array() : $_POST['data'];
    $value = empty($_POST['value']) ? array() : $_POST['value'];
    $config = empty($_POST['config']) ? array() : $_POST['config'];

    $context = array(
      'data' => &$data,
      'value' => &$value,
      'config' => &$config,
    );

    // Allow for late modification of settings.
    drupal_alter('seeds_seed_' . $action, $context, $type);
    drupal_alter('seeds_seed_' . $type . '_' . $action, $context, $type);

    $result = $info[$type][$action]($data, $value, $config);

    // Allow for result modification.
    drupal_alter('seeds_seed_' . $action . '_result', $result, $context, $type);
    drupal_alter('seeds_seed_' . $type . '_' . $action . '_result', $result, $context, $type);

    drupal_json_output($result);

    // Retrieve previous user state.
    user_login_submit(array(), $previous_user);
  }

  drupal_exit();
}

/**
 * Get all implemented seed info.
 */
function _seeds_seeds_get_info() {
  $seeds = array();

  // Load all seeds.
  foreach (module_implements('seed_info') as $module) {
    $function = $module . '_seed_info';

    // @TODO: make sure to load file where the hook might be defined.
    foreach ($function() as $type => $info) {
      if (empty($info['module'])) {
        $info['module'] = $module;
      }

      // Fulfil default convention callbacks.
      foreach (array('create', 'remove') as $action) {
        if (empty($info[$action])) {
          $action_function = "{$info['module']}_{$type}_seed_{$action}";
          if (function_exists($action_function)) {
            $info[$action] = $action_function;
          }
        }
      }

      $seeds[$type] = $info;
    }
  }

  drupal_alter('seed_info', $seeds);

  return $seeds;
}
